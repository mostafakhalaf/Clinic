// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ClinicDBContext))]
    partial class ClinicDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.Patient", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("dde4ba50-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed1",
                            phoneNumber = "01025882940"
                        },
                        new
                        {
                            ID = new Guid("dde4ba51-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed2",
                            phoneNumber = "01025882941"
                        },
                        new
                        {
                            ID = new Guid("dde4ba52-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed3",
                            phoneNumber = "01025882942"
                        },
                        new
                        {
                            ID = new Guid("dde4ba53-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed4",
                            phoneNumber = "01025882943"
                        },
                        new
                        {
                            ID = new Guid("dde4ba54-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed5",
                            phoneNumber = "01025882944"
                        },
                        new
                        {
                            ID = new Guid("dde4ba55-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed6",
                            phoneNumber = "01025882945"
                        },
                        new
                        {
                            ID = new Guid("dde4ba56-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed7",
                            phoneNumber = "01025882946"
                        },
                        new
                        {
                            ID = new Guid("dde4ba57-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed8",
                            phoneNumber = "01025882947"
                        },
                        new
                        {
                            ID = new Guid("dde4ba58-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed9",
                            phoneNumber = "01025882948"
                        },
                        new
                        {
                            ID = new Guid("dde4ba59-808e-479f-be8b-72f69913442f"),
                            IsDelete = false,
                            Name = "ahmed10",
                            phoneNumber = "01025882949"
                        });
                });

            modelBuilder.Entity("Core.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            ID = new Guid("52505b50-5889-475e-8002-9f9c2ce83539"),
                            IsDelete = false,
                            Number = "1",
                            PatientID = new Guid("dde4ba50-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(429)
                        },
                        new
                        {
                            ID = new Guid("9b97b19e-94c0-4167-b2fa-17c27e5b51d1"),
                            IsDelete = false,
                            Number = "2",
                            PatientID = new Guid("dde4ba51-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(446)
                        },
                        new
                        {
                            ID = new Guid("aeb95a58-b339-4d95-bdb3-745b3e059c09"),
                            IsDelete = false,
                            Number = "3",
                            PatientID = new Guid("dde4ba52-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(450)
                        },
                        new
                        {
                            ID = new Guid("489692ab-1ca3-44a3-9de9-9f38243cff6a"),
                            IsDelete = false,
                            Number = "4",
                            PatientID = new Guid("dde4ba53-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(454)
                        },
                        new
                        {
                            ID = new Guid("86597129-4733-4545-99e4-dbc06c70430a"),
                            IsDelete = false,
                            Number = "5",
                            PatientID = new Guid("dde4ba54-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(458)
                        },
                        new
                        {
                            ID = new Guid("f899a6d2-baa4-4463-944c-99047d3f49fa"),
                            IsDelete = false,
                            Number = "6",
                            PatientID = new Guid("dde4ba55-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(462)
                        },
                        new
                        {
                            ID = new Guid("86363b2c-9128-4c31-872f-ed0d5c814938"),
                            IsDelete = false,
                            Number = "7",
                            PatientID = new Guid("dde4ba56-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(486)
                        },
                        new
                        {
                            ID = new Guid("d23945b7-fe8c-4d50-bba0-d55f0433b269"),
                            IsDelete = false,
                            Number = "8",
                            PatientID = new Guid("dde4ba57-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(490)
                        },
                        new
                        {
                            ID = new Guid("1925c89b-e71c-4414-91cd-73870dbb9ef6"),
                            IsDelete = false,
                            Number = "9",
                            PatientID = new Guid("dde4ba58-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(494)
                        },
                        new
                        {
                            ID = new Guid("76b708dc-a804-430e-94f3-86bde31ace8f"),
                            IsDelete = false,
                            Number = "10",
                            PatientID = new Guid("dde4ba59-808e-479f-be8b-72f69913442f"),
                            Time = new DateTime(2022, 6, 5, 0, 3, 50, 928, DateTimeKind.Local).AddTicks(498)
                        });
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("bcc2500a-7632-4d6c-a212-e2b28a18291e"),
                            IsActive = true,
                            IsDelete = false,
                            Password = "$2b$10$ADfArRlGOuMD/oVYVnoSqujORyXM5rw8oAHPREfegbSRwqmfDIMI2",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Core.Entities.Ticket", b =>
                {
                    b.HasOne("Core.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
